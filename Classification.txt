{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 from sklearn.datasets import load_iris\
from sklearn.model_selection import train_test_split\
from sklearn.preprocessing import StandardScaler\
from sklearn.linear_model import LogisticRegression\
from sklearn.metrics import accuracy_score, classification_report\
# Load the iris dataset\
iris = load_iris()\
# Features\
X = iris.data\
# Target variable\
y = iris.target\
# Splitting the dataset into training and testing sets\
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\
# Feature scaling\
scaler = StandardScaler()\
X_train_scaled = scaler.fit_transform(X_train)\
X_test_scaled = scaler.transform(X_test)\
# Initialize and train the logistic regression model\
logreg = LogisticRegression()\
logreg.fit(X_train_scaled, y_train)\
# Predictions\
y_pred_train = logreg.predict(X_train_scaled)\
y_pred_test = logreg.predict(X_test_scaled)\
# Model evaluation\
train_accuracy = accuracy_score(y_train, y_pred_train)\
test_accuracy = accuracy_score(y_test, y_pred_test)\
print("Training Accuracy:", train_accuracy)\
print("Testing Accuracy:", test_accuracy)\
# Additional evaluation metrics\
print("Classification Report on Test Data:")\
print(classification_report(y_test, y_pred_test))}